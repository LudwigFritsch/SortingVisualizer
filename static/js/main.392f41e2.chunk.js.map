{"version":3,"sources":["algorithms/getBubbleSortAnimations.js","algorithms/getMergeSortAnimations.js","algorithms/getHeapSortAnimations.js","algorithms/getQuickSortAnimations.js","SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getBubbleSortAnimations","array","animations","i","length","j","push","temp","console","log","mergeSortHelper","mainArray","startIdx","endIdx","auxiliaryArray","middleIdx","Math","floor","k","doMerge","getMergeSortAnimations","slice","heapify","size","max","left","right","getQuickSortAnimations","arr","start","end","index","pivotValue","pivotIndex","partition","PRIMARY_COLOR","SECONDARY_COLOR","SORTEDCOLOR","SortingVisualizer","useState","setArray","arrayBars","resetArray","min","random","a","makeClickable","setTimeout","document","getElementById","style","backgroundColor","barOne","barTwo","makeColor","barOneHeigth","height","barTwoHeigth","parseInt","makeArrayFlash","useEffect","className","id","onClick","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","newHeight","ANIMATION_SPEED_MS","makeColorQuick","makeColorPivot","makeColorTemp","getHeapSortAnimations","makeColorHeap","bubbleSort","map","value","Idx","heigth","arg","pointerEvents","App","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.392f41e2.chunk.js","sourcesContent":["export default function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 1; j < array.length - i; j++) {\r\n      animations.push([j - 1, j]);\r\n      if (j === array.length - i - 1) {\r\n        animations.push(j);\r\n      }\r\n      if (array[j] < array[j - 1]) {\r\n        let temp = array[j - 1];\r\n        array[j - 1] = array[j];\r\n        array[j] = temp;\r\n      }\r\n    }\r\n  }\r\n  animations.push(0);\r\n  console.log(animations);\r\n  return animations;\r\n}\r\n","function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    animations.push([i, j]);\r\n\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n\r\n    animations.push([i, i]);\r\n\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n\r\n    animations.push([j, j]);\r\n\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n\r\nexport default getMergeSortAnimations;\r\n","export default function getHeapSortAnimations(array) {\r\n  const animations = [];\r\n\r\n  let size = array.length;\r\n\r\n  // build heapSort (rearrange array)\r\n  for (let i = Math.floor(size / 2 - 1); i >= 0; i--)\r\n    heapify(array, size, i, animations);\r\n\r\n  // one by one extract an element from heapSort\r\n  for (let i = size - 1; i >= 0; i--) {\r\n    // move current root to end\r\n    animations.push([0, array[0], i, array[i], \"final\"]);\r\n    let temp = array[0];\r\n    array[0] = array[i];\r\n    array[i] = temp;\r\n\r\n    // call max heapify on the reduced heapSort\r\n    heapify(array, i, 0, animations);\r\n  }\r\n  return animations;\r\n}\r\n\r\n// to heapify a subtree rooted with node i which is an index in array[]\r\nfunction heapify(array, size, i, animations) {\r\n  let max = i; // initialize max as root\r\n  let left = 2 * i + 1;\r\n  let right = 2 * i + 2;\r\n\r\n  // if left child is larger than root\r\n  if (left < size && array[left] > array[max]) max = left;\r\n\r\n  // if right child is larger than max\r\n  if (right < size && array[right] > array[max]) max = right;\r\n\r\n  // if max is not root\r\n  if (max !== i) {\r\n    // swap\r\n    animations.push([i, array[i], max, array[max]]);\r\n    let temp = array[i];\r\n    array[i] = array[max];\r\n    array[max] = temp;\r\n\r\n    // recursively heapify the affected sub-tree\r\n    heapify(array, size, max, animations);\r\n  }\r\n}\r\n","const animations = [];\r\nexport default function getQuickSortAnimations(arr, start, end) {\r\n  if (start === 0 && end === arr.length - 1) animations.length = 0;\r\n\r\n  // Base case or terminating case\r\n  if (start >= end) {\r\n    return;\r\n  }\r\n\r\n  // Returns pivotIndex\r\n  let index = partition(arr, start, end);\r\n  animations.push([index, \"pivotIndex\"]);\r\n\r\n  // Recursively apply the same logic to the left and right subarrays\r\n  getQuickSortAnimations(arr, start, index - 1);\r\n  getQuickSortAnimations(arr, index + 1, end);\r\n  return animations;\r\n}\r\n\r\nfunction partition(arr, start, end) {\r\n  // Taking the last element as the pivot\r\n  const pivotValue = arr[end];\r\n  let pivotIndex = start;\r\n  animations.push([pivotIndex, \"pivotTemp\"]);\r\n  for (let i = start; i < end; i++) {\r\n    if (arr[i] < pivotValue) {\r\n      animations.push([i, arr[i], pivotIndex, arr[pivotIndex], \"swap\"]);\r\n      // Swapping elements\r\n      [arr[i], arr[pivotIndex]] = [arr[pivotIndex], arr[i]];\r\n      // Moving to next element\r\n      pivotIndex++;\r\n      animations.push([pivotIndex, \"pivotTemp\"]);\r\n    }\r\n  }\r\n\r\n  // Putting the pivot value in the middle\r\n  animations.push([\r\n    pivotIndex,\r\n    arr[pivotIndex],\r\n    end,\r\n    arr[end],\r\n    \"MOVE PIVOT TO MIDDLE\",\r\n  ]);\r\n  [arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]];\r\n  return pivotIndex;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SortingVisualizer.css\";\r\nimport getBubbleSortAnimations from \"./algorithms/getBubbleSortAnimations.js\";\r\nimport getMergeSortAnimations from \"./algorithms/getMergeSortAnimations.js\";\r\nimport getHeapSortAnimations from \"./algorithms/getHeapSortAnimations.js\";\r\nimport getQuickSortAnimations from \"./algorithms/getQuickSortAnimations.js\";\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = \"rgb(190, 226, 250)\";\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = \"rgba(0, 0, 0, 0.8)\";\r\n\r\nconst FLESH_COLOR = \"rgb(215, 255, 233)\";\r\n\r\nconst SORTEDCOLOR = \"aliceblue\";\r\n\r\n// Change this value for the speed of the animations.\r\nconst ANIMATION_SPEED_MS = 4;\r\n\r\nconst SortingVisualizer = () => {\r\n  const [array, setArray] = useState([]);\r\n  const [arrayBars, setArrayBars] = useState(150);\r\n\r\n  useEffect(() => {\r\n    resetArray(arrayBars);\r\n  }, [arrayBars]);\r\n\r\n  function resetArray(arrayBars) {\r\n    const array = [];\r\n    for (let i = 0; i < arrayBars; i++) {\r\n      array.push(getRandomNumberBetween(10, 600));\r\n    }\r\n    setArray(array);\r\n  }\r\n\r\n  function heapSort() {\r\n    makeClickable(\"block\");\r\n    const animations = getHeapSortAnimations(array, array.length);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      setTimeout(() => {\r\n        const barOne = document.getElementById(animations[i][0]);\r\n        const barTwo = document.getElementById(animations[i][2]);\r\n        makeColorHeap(barOne, barTwo, animations[i]);\r\n        const barOneHeigth = animations[i][1];\r\n        const barTwoHeigth = animations[i][3];\r\n\r\n        barTwo.style.height = `${barOneHeigth}px`;\r\n        barOne.style.height = `${barTwoHeigth}px`;\r\n      }, i * ANIMATION_SPEED_MS * 8);\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          makeArrayFlash();\r\n        }, i * ANIMATION_SPEED_MS * 8 + 100);\r\n      }\r\n    }\r\n  }\r\n\r\n  function quickSort() {\r\n    makeClickable(\"block\");\r\n    const animations = getQuickSortAnimations(array, 0, array.length - 1);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      setTimeout(() => {\r\n        if (animations[i].length > 2) {\r\n          const barOne = document.getElementById(animations[i][0]);\r\n          const barTwo = document.getElementById(animations[i][2]);\r\n          makeColorQuick(barOne, barTwo);\r\n          const barOneHeigth = animations[i][1];\r\n          const barTwoHeigth = animations[i][3];\r\n\r\n          barTwo.style.height = `${barOneHeigth}px`;\r\n          barOne.style.height = `${barTwoHeigth}px`;\r\n        } else if (\r\n          animations[i].length === 2 &&\r\n          animations[i][1] !== \"pivotTemp\"\r\n        ) {\r\n          const pivotBar = document.getElementById(animations[i][0]);\r\n          makeColorPivot(pivotBar);\r\n        }\r\n        if (animations[i].length === 2 && animations[i][1] === \"pivotTemp\") {\r\n          const pivotTemp = document.getElementById(animations[i][0]);\r\n          makeColorTemp(pivotTemp);\r\n        }\r\n      }, i * ANIMATION_SPEED_MS * 6);\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          makeArrayFlash();\r\n        }, i * ANIMATION_SPEED_MS * 6 + 10);\r\n      }\r\n    }\r\n  }\r\n\r\n  function mergeSort() {\r\n    makeClickable(\"block\");\r\n    const animations = getMergeSortAnimations(array);\r\n    console.log(animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n\r\n          if (i > 2831 && color === PRIMARY_COLOR) {\r\n            barOneStyle.backgroundColor = SORTEDCOLOR;\r\n          }\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n          if (i > 2831) {\r\n            barOneStyle.backgroundColor = SORTEDCOLOR;\r\n          }\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          makeArrayFlash();\r\n        }, i * ANIMATION_SPEED_MS + 10);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function bubbleSort() {\r\n    makeClickable(\"block\");\r\n    const animations = getBubbleSortAnimations(array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (animations[i] > -1) {\r\n        setTimeout(() => {\r\n          const barOne = document.getElementById(animations[i]);\r\n          barOne.style.backgroundColor = SORTEDCOLOR;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n      if (animations[i].length > 1) {\r\n        setTimeout(() => {\r\n          const barOne = document.getElementById(animations[i][0]);\r\n          const barTwo = document.getElementById(animations[i][1]);\r\n          makeColor(barOne, barTwo);\r\n          const barOneHeigth = barOne.style.height;\r\n          const barTwoHeigth = barTwo.style.height;\r\n          if (parseInt(barOneHeigth) > parseInt(barTwoHeigth)) {\r\n            const temp = barTwo.style.height;\r\n            barTwo.style.height = barOneHeigth;\r\n            barOne.style.height = temp;\r\n          }\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          makeArrayFlash();\r\n        }, i * ANIMATION_SPEED_MS + 100);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\" id=\"navbar\">\r\n        <div\r\n          className=\"a resetArray\"\r\n          id=\"resetArray\"\r\n          onClick={() => {\r\n            resetArray(arrayBars);\r\n          }}\r\n        >\r\n          Generate a new Array\r\n        </div>\r\n\r\n        <div className=\"a\" onClick={mergeSort}>\r\n          Merge Sort\r\n        </div>\r\n\r\n        <div className=\"a\" onClick={quickSort}>\r\n          Quick Sort\r\n        </div>\r\n        <div className=\"a\" onClick={heapSort}>\r\n          Heap Sort\r\n        </div>\r\n        <div\r\n          className=\"a\"\r\n          onClick={() => {\r\n            bubbleSort();\r\n          }}\r\n        >\r\n          Bubble Sort\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"array-container\">\r\n          {array.map((value, Idx) => {\r\n            return (\r\n              <div\r\n                className=\"array-bar\"\r\n                key={Idx}\r\n                id={Idx}\r\n                heigth={value}\r\n                style={{\r\n                  backgroundColor: PRIMARY_COLOR,\r\n                  height: `${value}px`,\r\n                }}\r\n              ></div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"whiteLine\"></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortingVisualizer;\r\n\r\nexport function getRandomNumberBetween(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function makeColor(barOne, barTwo) {\r\n  barOne.style.backgroundColor = SECONDARY_COLOR;\r\n  barTwo.style.backgroundColor = SECONDARY_COLOR;\r\n  setTimeout(() => {\r\n    barOne.style.backgroundColor = PRIMARY_COLOR;\r\n  }, ANIMATION_SPEED_MS);\r\n}\r\n\r\nexport function makeColorPivot(barOne) {\r\n  barOne.style.backgroundColor = SORTEDCOLOR;\r\n}\r\n\r\nexport function makeColorTemp(barOne) {\r\n  barOne.style.backgroundColor = \"white\";\r\n}\r\n\r\nexport function makeColorHeap(barOne, barTwo, animations) {\r\n  if (animations.length >= 5) {\r\n    barOne.style.backgroundColor = SECONDARY_COLOR;\r\n    barTwo.style.backgroundColor = SORTEDCOLOR;\r\n    setTimeout(() => {\r\n      barOne.style.backgroundColor = PRIMARY_COLOR;\r\n      const bar = document.getElementById(animations[2]);\r\n      bar.style.backgroundColor = SORTEDCOLOR;\r\n    }, ANIMATION_SPEED_MS * 8);\r\n  } else {\r\n    barOne.style.backgroundColor = SECONDARY_COLOR;\r\n    barTwo.style.backgroundColor = SECONDARY_COLOR;\r\n    setTimeout(() => {\r\n      barOne.style.backgroundColor = PRIMARY_COLOR;\r\n      barTwo.style.backgroundColor = PRIMARY_COLOR;\r\n    }, ANIMATION_SPEED_MS * 8);\r\n  }\r\n}\r\n\r\nexport function makeColorQuick(barOne, barTwo) {\r\n  barOne.style.backgroundColor = SECONDARY_COLOR;\r\n  barTwo.style.backgroundColor = SECONDARY_COLOR;\r\n  setTimeout(() => {\r\n    barOne.style.backgroundColor = PRIMARY_COLOR;\r\n    barTwo.style.backgroundColor = PRIMARY_COLOR;\r\n  }, ANIMATION_SPEED_MS * 3);\r\n}\r\n\r\nexport function arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function eventFire(el, etype) {\r\n  if (el.fireEvent) {\r\n    el.fireEvent(\"on\" + etype);\r\n  } else {\r\n    var evObj = document.createEvent(\"Events\");\r\n    evObj.initEvent(etype, true, false);\r\n    el.dispatchEvent(evObj);\r\n  }\r\n}\r\n\r\nexport function makeArrayFlash() {\r\n  const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n  for (let i = 0; i < arrayBars.length; i++) {\r\n    const bar = arrayBars[i];\r\n    bar.style.backgroundColor = FLESH_COLOR;\r\n  }\r\n  setTimeout(() => {\r\n    for (let i = 0; i < arrayBars.length; i++) {\r\n      const bar = arrayBars[i];\r\n      bar.style.backgroundColor = PRIMARY_COLOR;\r\n    }\r\n    makeClickable(\"unblock\");\r\n  }, 1500);\r\n}\r\n\r\nexport function makeClickable(arg) {\r\n  arg === \"block\"\r\n    ? (document.getElementById(\"navbar\").style.pointerEvents = \"none\")\r\n    : (document.getElementById(\"navbar\").style.pointerEvents = \"all\");\r\n}\r\n","import \"./App.css\";\r\nimport SortingVisualizer from \"./SortingVisualizer.jsx\";\r\n\r\nfunction App() {\r\n  document.title = \"Sorting Visualizer\";\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}